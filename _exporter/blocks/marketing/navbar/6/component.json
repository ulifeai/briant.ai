{
  "imports": [
    {
      "source": "react",
      "specifiers": [
        {
          "type": "default",
          "local": "React"
        },
        {
          "type": "named",
          "imported": "useEffect",
          "local": "useEffect"
        },
        {
          "type": "named",
          "imported": "useRef",
          "local": "useRef"
        },
        {
          "type": "named",
          "imported": "useState",
          "local": "useState"
        }
      ]
    },
    {
      "source": "framer-motion",
      "specifiers": [
        {
          "type": "named",
          "imported": "AnimatePresence",
          "local": "AnimatePresence"
        },
        {
          "type": "named",
          "imported": "motion",
          "local": "motion"
        }
      ]
    },
    {
      "source": "@/components/ui/button",
      "specifiers": [
        {
          "type": "named",
          "imported": "Button",
          "local": "Button"
        }
      ]
    },
    {
      "source": "lucide-react",
      "specifiers": [
        {
          "type": "named",
          "imported": "ChevronDown",
          "local": "ChevronDown"
        },
        {
          "type": "named",
          "imported": "Menu",
          "local": "Menu"
        }
      ]
    },
    {
      "source": "@uidotdev/usehooks",
      "specifiers": [
        {
          "type": "named",
          "imported": "useMediaQuery",
          "local": "useMediaQuery"
        }
      ]
    }
  ],
  "components": [
    {
      "name": "Header",
      "preReturnCode": "const [openMenu, setOpenMenu] = useState(false);\nconst isMobile = useMediaQuery(\"(max-width: 991px)\");\nconst [openDropdown, setOpenDropdown] = useState(false);\nconst menuRef = useRef<HTMLDivElement>(null);\nconst buttonRef = useRef<HTMLButtonElement>(null);\nuseEffect(() => {\n  if (typeof window === \"undefined\") return;\n  const handleClickOutside = (event: MouseEvent) => {\n    if (menuRef.current && !menuRef.current.contains(event.target as Node) && buttonRef.current && !buttonRef.current.contains(event.target as Node)) {\n      setOpenDropdown(false);\n    }\n  };\n  document.addEventListener(\"mousedown\", handleClickOutside);\n  return () => {\n    document.removeEventListener(\"mousedown\", handleClickOutside);\n  };\n}, []);",
      "jsx": {
        "type": "element",
        "tag": "nav",
        "props": {
          "className": "relative z-[999] flex min-h-16 w-full items-center border-b border-b-border-primary bg-background-primary px-[5%] md:min-h-18"
        },
        "children": [
          {
            "type": "element",
            "tag": "div",
            "props": {
              "className": "mx-auto flex size-full items-center justify-between"
            },
            "children": [
              {
                "type": "element",
                "tag": "a",
                "props": {
                  "href": "{logo.url}"
                },
                "children": [
                  {
                    "type": "element",
                    "tag": "img",
                    "props": {
                      "src": "{logo.src}",
                      "alt": "{logo.alt}"
                    }
                  }
                ]
              },
              {
                "type": "element",
                "tag": "div",
                "props": {
                  "className": "flex items-center justify-center gap-2 lg:gap-4"
                },
                "children": [
                  {
                    "type": "component",
                    "component": "Button",
                    "package": "@/components/ui/button",
                    "props": {
                      "variant": "{buttons.0.variant}",
                      "size": "{buttons.0.size}",
                      "className": "w-full whitespace-nowrap"
                    },
                    "children": [
                      {
                        "type": "dynamicText",
                        "text": "buttons.0.title"
                      }
                    ]
                  },
                  {
                    "type": "element",
                    "tag": "button",
                    "props": {
                      "onClick": "{() => setOpenMenu(prev => !prev)}",
                      "className": "-mr-2 flex size-12 flex-col items-center justify-center justify-self-end lg:mr-0"
                    },
                    "children": [
                      {
                        "type": "element",
                        "tag": "span",
                        "props": {
                          "className": "relative flex size-6 flex-col items-center justify-center"
                        },
                        "children": [
                          {
                            "type": "element",
                            "tag": "motion.span",
                            "props": {
                              "animate": "{openMenu ? \"open\" : \"close\"}",
                              "variants": "{{\n  open: {\n    width: 0,\n    transition: {\n      duration: 0.1,\n      ease: \"easeIn\"\n    }\n  },\n  close: {\n    width: \"100%\",\n    transition: {\n      duration: 0.1,\n      delay: 0.3,\n      ease: \"linear\"\n    }\n  }\n}}",
                              "className": "absolute top-[3px] h-0.5 w-full bg-black"
                            }
                          },
                          {
                            "type": "element",
                            "tag": "motion.span",
                            "props": {
                              "animate": "{openMenu ? \"open\" : \"close\"}",
                              "variants": "{{\n  open: {\n    rotate: 135,\n    transition: {\n      duration: 0.3,\n      delay: 0.1,\n      ease: \"easeInOut\"\n    }\n  },\n  close: {\n    rotate: 0,\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  },\n  openSecond: {\n    rotate: 45,\n    transition: {\n      duration: 0.3,\n      delay: 0.1,\n      ease: \"easeInOut\"\n    }\n  },\n  closeSecond: {\n    rotate: 0,\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }\n}}",
                              "className": "absolute h-0.5 w-full bg-black"
                            }
                          },
                          {
                            "type": "element",
                            "tag": "motion.span",
                            "props": {
                              "animate": "{openMenu ? \"openSecond\" : \"closeSecond\"}",
                              "variants": "{{\n  open: {\n    rotate: 135,\n    transition: {\n      duration: 0.3,\n      delay: 0.1,\n      ease: \"easeInOut\"\n    }\n  },\n  close: {\n    rotate: 0,\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  },\n  openSecond: {\n    rotate: 45,\n    transition: {\n      duration: 0.3,\n      delay: 0.1,\n      ease: \"easeInOut\"\n    }\n  },\n  closeSecond: {\n    rotate: 0,\n    transition: {\n      duration: 0.3,\n      ease: \"easeInOut\"\n    }\n  }\n}}",
                              "className": "absolute h-0.5 w-full bg-black"
                            }
                          },
                          {
                            "type": "element",
                            "tag": "motion.span",
                            "props": {
                              "animate": "{openMenu ? \"open\" : \"close\"}",
                              "variants": "{{\n  open: {\n    width: 0,\n    transition: {\n      duration: 0.1,\n      ease: \"easeIn\"\n    }\n  },\n  close: {\n    width: \"100%\",\n    transition: {\n      duration: 0.1,\n      delay: 0.3,\n      ease: \"linear\"\n    }\n  }\n}}",
                              "className": "absolute bottom-[3px] h-0.5 w-full bg-black"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "type": "component",
            "component": "AnimatePresence",
            "package": "framer-motion",
            "children": [
              {
                "type": "logical",
                "operator": "&&",
                "condition": "openMenu",
                "children": [
                  {
                    "type": "element",
                    "tag": "motion.div",
                    "props": {
                      "variants": "{{\n  open: {\n    height: \"100dvh\"\n  },\n  close: {\n    height: \"auto\"\n  }\n}}",
                      "animate": "{openMenu ? \"open\" : \"close\"}",
                      "initial": "close",
                      "exit": "close",
                      "className": "absolute left-0 right-0 top-full w-full overflow-hidden"
                    },
                    "children": [
                      {
                        "type": "element",
                        "tag": "motion.div",
                        "props": {
                          "variants": "{{\n  open: {\n    y: 0\n  },\n  close: {\n    y: \"-100%\"\n  }\n}}",
                          "animate": "{openMenu ? \"open\" : \"close\"}",
                          "initial": "close",
                          "exit": "close",
                          "transition": "{{\n  duration: 0.5\n}}",
                          "className": "absolute left-0 right-0 top-0 block h-[100dvh] overflow-auto bg-white px-[5%]"
                        },
                        "children": [
                          {
                            "type": "element",
                            "tag": "div",
                            "props": {
                              "className": "-mt-18 flex h-full flex-col lg:justify-center"
                            },
                            "children": [
                              {
                                "type": "loop",
                                "loop": {
                                  "array": "navItems",
                                  "iterator": "navItem"
                                },
                                "children": [
                                  {
                                    "type": "element",
                                    "tag": "div",
                                    "props": {
                                      "key": "{index}"
                                    },
                                    "children": [
                                      {
                                        "type": "conditional",
                                        "condition": "navItem.subMenuItems && navItem.subMenuItems.length > 0",
                                        "children": [
                                          {
                                            "type": "element",
                                            "tag": "div",
                                            "props": {
                                              "className": "relative"
                                            },
                                            "children": [
                                              {
                                                "type": "element",
                                                "tag": "button",
                                                "props": {
                                                  "ref": "{buttonRef}",
                                                  "onClick": "{() => setOpenDropdown(prev => !prev)}",
                                                  "className": "static flex items-center gap-4 lg:gap-6"
                                                },
                                                "children": [
                                                  {
                                                    "type": "element",
                                                    "tag": "span",
                                                    "props": {
                                                      "className": "py-3 text-xl leading-[30px] lg:my-2 lg:py-2 lg:text-2xl lg:leading-[1.5]"
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "dynamicText",
                                                        "text": "navItem.title"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "element",
                                                    "tag": "motion.span",
                                                    "props": {
                                                      "variants": "{{\n  rotate: {\n    rotate: 180\n  },\n  initial: {\n    rotate: 0\n  }\n}}",
                                                      "animate": "{openDropdown ? \"rotate\" : \"initial\"}",
                                                      "transition": "{{\n  duration: 0.3\n}}"
                                                    },
                                                    "children": [
                                                      {
                                                        "type": "component",
                                                        "component": "ChevronDown",
                                                        "package": "lucide-react"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "component",
                                                "component": "AnimatePresence",
                                                "package": "framer-motion",
                                                "children": [
                                                  {
                                                    "type": "logical",
                                                    "operator": "&&",
                                                    "condition": "openDropdown",
                                                    "children": [
                                                      {
                                                        "type": "element",
                                                        "tag": "motion.nav",
                                                        "props": {
                                                          "variants": "{{\n  open: {\n    height: \"auto\",\n    width: \"auto\"\n  },\n  close: {\n    height: 0,\n    width: 0\n  }\n}}",
                                                          "animate": "{openDropdown ? \"open\" : \"close\"}",
                                                          "initial": "close",
                                                          "exit": "close",
                                                          "transition": "{{\n  duration: 0.2\n}}",
                                                          "ref": "{menuRef}",
                                                          "className": "static block min-w-full overflow-hidden bg-background-primary"
                                                        },
                                                        "children": [
                                                          {
                                                            "type": "loop",
                                                            "loop": {
                                                              "array": "navItem.subMenuItems",
                                                              "iterator": "subMenuItem"
                                                            },
                                                            "children": [
                                                              {
                                                                "type": "element",
                                                                "tag": "a",
                                                                "props": {
                                                                  "key": "{subIndex}",
                                                                  "href": "{subMenuItem.url}",
                                                                  "onClick": "{() => setOpenMenu(false)}",
                                                                  "role": "button",
                                                                  "className": "ml-6 block py-4 text-xl leading-[30px] lg:my-2 lg:py-2 lg:text-2xl lg:leading-[1.5]"
                                                                },
                                                                "children": [
                                                                  {
                                                                    "type": "dynamicText",
                                                                    "text": "subMenuItem.title"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "else": [
                                          {
                                            "type": "element",
                                            "tag": "a",
                                            "props": {
                                              "href": "{navItem.url}",
                                              "className": "static block py-3 text-xl leading-[30px] lg:my-2 lg:py-2 lg:text-2xl lg:leading-[1.5]"
                                            },
                                            "children": [
                                              {
                                                "type": "dynamicText",
                                                "text": "navItem.title"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ]
}